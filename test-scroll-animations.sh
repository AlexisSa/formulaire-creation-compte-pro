#!/bin/bash

# Script de test complet pour les animations au scroll
# Ex√©cute tous les types de tests : unitaires, int√©gration, accessibilit√© et performance

echo "üß™ D√©marrage des tests pour les animations au scroll..."
echo "=================================================="

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction pour afficher les r√©sultats
print_result() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $2${NC}"
    else
        echo -e "${RED}‚ùå $2${NC}"
    fi
}

# Fonction pour afficher les sections
print_section() {
    echo -e "\n${BLUE}üìã $1${NC}"
    echo "----------------------------------------"
}

# V√©rifier que Jest est install√©
if ! command -v jest &> /dev/null; then
    echo -e "${RED}‚ùå Jest n'est pas install√©. Veuillez installer Jest d'abord.${NC}"
    exit 1
fi

# V√©rifier que les d√©pendances de test sont install√©es
if ! npm list @testing-library/react &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  Installation des d√©pendances de test...${NC}"
    npm install --save-dev @testing-library/react @testing-library/jest-dom jest-axe
fi

# 1. Tests unitaires pour les hooks
print_section "Tests unitaires - Hooks d'animation au scroll"
jest __tests__/hooks/useViewportAnimations.test.ts --verbose --coverage
UNIT_HOOKS_RESULT=$?
print_result $UNIT_HOOKS_RESULT "Tests unitaires des hooks"

# 2. Tests d'int√©gration pour les composants
print_section "Tests d'int√©gration - Composants Viewport"
jest __tests__/components/viewport-animations.test.tsx --verbose --coverage
INTEGRATION_RESULT=$?
print_result $INTEGRATION_RESULT "Tests d'int√©gration des composants"

# 3. Tests d'accessibilit√©
print_section "Tests d'accessibilit√© - Conformit√© WCAG 2.1"
jest __tests__/accessibility/viewport-animations.test.tsx --config=jest.accessibility.config.js --verbose
ACCESSIBILITY_RESULT=$?
print_result $ACCESSIBILITY_RESULT "Tests d'accessibilit√©"

# 4. Tests de performance
print_section "Tests de performance - Optimisations et m√©triques"
jest __tests__/performance/viewport-animations.test.tsx --config=jest.performance.config.js --verbose
PERFORMANCE_RESULT=$?
print_result $PERFORMANCE_RESULT "Tests de performance"

# 5. Tests de r√©gression
print_section "Tests de r√©gression - Stabilit√©"
jest __tests__/hooks/useViewportAnimations.test.ts __tests__/components/viewport-animations.test.tsx --verbose --passWithNoTests
REGRESSION_RESULT=$?
print_result $REGRESSION_RESULT "Tests de r√©gression"

# R√©sum√© des r√©sultats
echo -e "\n${BLUE}üìä R√©sum√© des tests${NC}"
echo "=================================================="

TOTAL_TESTS=5
PASSED_TESTS=0

if [ $UNIT_HOOKS_RESULT -eq 0 ]; then
    ((PASSED_TESTS++))
fi

if [ $INTEGRATION_RESULT -eq 0 ]; then
    ((PASSED_TESTS++))
fi

if [ $ACCESSIBILITY_RESULT -eq 0 ]; then
    ((PASSED_TESTS++))
fi

if [ $PERFORMANCE_RESULT -eq 0 ]; then
    ((PASSED_TESTS++))
fi

if [ $REGRESSION_RESULT -eq 0 ]; then
    ((PASSED_TESTS++))
fi

echo -e "${BLUE}Tests unitaires (hooks):${NC} $([ $UNIT_HOOKS_RESULT -eq 0 ] && echo -e "${GREEN}‚úÖ PASS√â${NC}" || echo -e "${RED}‚ùå √âCHOU√â${NC}")"
echo -e "${BLUE}Tests d'int√©gration (composants):${NC} $([ $INTEGRATION_RESULT -eq 0 ] && echo -e "${GREEN}‚úÖ PASS√â${NC}" || echo -e "${RED}‚ùå √âCHOU√â${NC}")"
echo -e "${BLUE}Tests d'accessibilit√©:${NC} $([ $ACCESSIBILITY_RESULT -eq 0 ] && echo -e "${GREEN}‚úÖ PASS√â${NC}" || echo -e "${RED}‚ùå √âCHOU√â${NC}")"
echo -e "${BLUE}Tests de performance:${NC} $([ $PERFORMANCE_RESULT -eq 0 ] && echo -e "${GREEN}‚úÖ PASS√â${NC}" || echo -e "${RED}‚ùå √âCHOU√â${NC}")"
echo -e "${BLUE}Tests de r√©gression:${NC} $([ $REGRESSION_RESULT -eq 0 ] && echo -e "${GREEN}‚úÖ PASS√â${NC}" || echo -e "${RED}‚ùå √âCHOU√â${NC}")"

echo -e "\n${BLUE}Score global:${NC} $PASSED_TESTS/$TOTAL_TESTS"

# D√©terminer le statut final
if [ $PASSED_TESTS -eq $TOTAL_TESTS ]; then
    echo -e "\n${GREEN}üéâ Tous les tests sont pass√©s avec succ√®s !${NC}"
    echo -e "${GREEN}‚ú® Les animations au scroll sont pr√™tes pour la production.${NC}"
    exit 0
else
    echo -e "\n${RED}‚ö†Ô∏è  Certains tests ont √©chou√©. Veuillez les corriger avant de continuer.${NC}"
    exit 1
fi
